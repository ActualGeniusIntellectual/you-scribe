WEBVTT

00:00.000 --> 00:06.440
The world's new era of warfare started here, on the eighth floor of an innocuous office

00:06.440 --> 00:09.400
building in Minsk, Belarus.

00:09.400 --> 00:15.360
A small anti-virus developer based within these walls, Virus Blockada, received an inbound

00:15.360 --> 00:16.740
help request.

00:16.740 --> 00:22.120
Their client in Iran was experiencing random, repeated reboots of their industrial-control

00:22.120 --> 00:23.120
computers.

00:23.120 --> 00:28.040
It was probably a bug, they thought—a misconfiguration of Windows, or an issue of two programs not

00:28.040 --> 00:29.760
playing nice with each other.

00:29.760 --> 00:34.220
So, they reinstalled Windows, but the issue remained.

00:34.220 --> 00:35.600
This upped the stakes.

00:35.600 --> 00:40.360
This wasn't some mistake in Windows programming—this was something purposefully malicious.

00:40.360 --> 00:46.200
Soon, Sergei Ulasin, the company's researcher, found some suspicious files on the errant

00:46.200 --> 00:47.320
machine.

00:47.320 --> 00:51.640
As he combed through their code, he made a discovery—a discovery that shook the world

00:51.640 --> 00:55.400
of information security to its core.

00:55.400 --> 01:00.480
This code, when placed on a USB drive and plugged into a computer, could silently launch

01:00.480 --> 01:04.340
and execute a program simply by being viewed.

01:04.340 --> 01:09.280
This was a brand new exploit—a catastrophically capable exploit.

01:09.280 --> 01:14.420
All it took was one drive, simply plugged in, to infect one computer.

01:14.420 --> 01:19.240
This method of spread was mortifyingly efficient—it was something out of a movie.

01:19.240 --> 01:23.720
Recognizing that, the intuitive question was how far it had spread.

01:23.720 --> 01:25.720
The answer was chilling.

01:25.720 --> 01:26.720
58%.

01:26.720 --> 01:32.600
58% of devices in Iran were infected with this malicious code.

01:32.600 --> 01:37.880
58% of the country's computers were within the grips of some mystery developer so capable

01:37.880 --> 01:41.960
that they had identified an exploit of existential proportions.

01:41.960 --> 01:46.140
And what made this ominous development all that much more intimidating was that nobody

01:46.140 --> 01:49.740
knew what this code was intended to do.

01:49.740 --> 01:55.940
Nobody knew why a high-skilled hacker had spread a groundbreaking worm to 58% of Iran's

01:55.940 --> 01:56.940
computers.

01:56.940 --> 02:01.540
What became clear far quicker is that Virus Blocka does discovery did not gain prominence

02:01.540 --> 02:06.540
for the virus itself—it gained prominence because this small Belarusian antivirus company

02:06.540 --> 02:10.640
had discovered that the world had entered a new era.

02:10.640 --> 02:18.520
The world had entered the era of highly advanced, highly targeted, and highly capable cyber-warfare.

02:18.520 --> 02:24.140
This new era was made possible, and perhaps more importantly, made profitable by one single

02:24.140 --> 02:27.060
concept—the Zero Day.

02:27.060 --> 02:32.060
You see, in decades past, national intelligence agencies and nefarious independent operatives

02:32.060 --> 02:35.280
focused on gathering information in transit.

02:35.280 --> 02:38.540
Rather than sneaking into the embassy, you intercepted the courier.

02:38.540 --> 02:41.900
Rather than placing a bug in the phone, you tapped the transmission line.

02:41.900 --> 02:46.840
It was simply easier to capture information on the move than at its origin or destination.

02:46.840 --> 02:51.940
As the digital age awoke, this MO continued, but then the manufacturers caught up.

02:51.940 --> 02:57.640
Apple, Microsoft, Google, and others all started encrypting data as soon as it left devices.

02:57.640 --> 03:03.320
Shielding information behind complex mathematical systems, encryption, by this time, was, for

03:03.320 --> 03:06.020
all practical purposes, perfect.

03:06.020 --> 03:10.280
Therefore, the strategies behind digital espionage had to change.

03:10.280 --> 03:13.040
The snoops needed a new way to get in.

03:13.140 --> 03:17.180
While the math behind encryption may be infallible, people are not.

03:17.180 --> 03:21.980
The devices on which data is created and stored—phones, computers, servers, and more—are created

03:21.980 --> 03:22.980
by people.

03:22.980 --> 03:25.860
Therefore, the devices have holes.

03:25.860 --> 03:29.440
These holes are referred to as Zero Days.

03:29.440 --> 03:31.780
Any software has vulnerabilities.

03:31.780 --> 03:35.140
Most will be caught before release, some will be caught shortly after and quickly addressed

03:35.140 --> 03:40.560
with a patch, but a tiny minority will go unnoticed for weeks, months, or years.

03:40.580 --> 03:45.140
In the early 2000s, hobbyist hackers spent their evenings scrolling through code, looking

03:45.140 --> 03:46.700
for these bugs.

03:46.700 --> 03:50.020
Faced with hostility and legal threats when reporting vulnerabilities straight to its

03:50.020 --> 03:54.460
software's developers, many would post about their findings on online forums—earning

03:54.460 --> 03:56.520
little else than bragging rights.

03:56.520 --> 04:00.240
Early information security companies would repackage this information and include it

04:00.240 --> 04:05.160
in a digital threat alert system for companies and agencies—notifying them when their software

04:05.160 --> 04:08.100
might have holes not yet fixed by the developer.

04:08.120 --> 04:14.200
One such company, iDefense, found itself faltering in 2002 as they were selling the same information

04:14.200 --> 04:19.960
at the same time to the same customer base—they simply had zero competitive advantage.

04:19.960 --> 04:22.000
So, they created one.

04:22.000 --> 04:24.920
They decided to start paying for exploits.

04:24.920 --> 04:28.560
Hackers would come to them with a bug, and, in exchange for their silence, iDefense would

04:28.560 --> 04:32.480
pay anywhere between a couple hundred and a couple thousand dollars.

04:32.480 --> 04:36.520
iDefense would then alert their software's developer and its own customers before the

04:36.540 --> 04:39.260
competing information security companies could.

04:39.260 --> 04:43.360
With the information staying among more trusted hands, this also lowered the likelihood of

04:43.360 --> 04:46.520
a vulnerability being used for nefarious reasons.

04:46.520 --> 04:51.220
iDefense had created an ethical, profitable system that gave hackers a first opportunity

04:51.220 --> 04:57.600
to monetize their hobby, and so it was no surprise that it grew into a massive success.

04:57.600 --> 05:04.080
In mere months, the company went from weeks behind on payroll to a pioneer in the industry.

05:04.140 --> 05:08.980
But then the calls started coming, and the area codes were local.

05:08.980 --> 05:14.180
The Chantilly, Virginia-based company was fielding inquiries from around the DC Beltway.

05:14.180 --> 05:17.140
Government contractors wanted to buy their exploits.

05:17.140 --> 05:22.380
For the zero days that iDefense had paid three or four figures for, the callers were willing

05:22.380 --> 05:27.780
to pay six—as long as the company stayed quiet, as long as the buyer stayed the only

05:27.780 --> 05:30.220
one with knowledge of the zero day.

05:30.240 --> 05:36.160
iDefense said no, but they soon found themselves priced out of the very market they had created.

05:36.160 --> 05:41.000
Whereas their payouts might fund a vacation, the black market bounties paid for sports

05:41.000 --> 05:44.320
cars—they simply couldn't compete.

05:44.320 --> 05:49.360
On the other side of the equation, the American military machine had recognized the astonishing

05:49.360 --> 05:53.340
potential rising out of a single software susceptibility.

05:53.340 --> 05:58.600
Unperturbed by borders, rules of engagement, or mortality, cyberwarfare had the potential

05:58.600 --> 06:04.260
to silently achieve America's strategic goals so long as they, and only they, knew

06:04.260 --> 06:06.700
about these zero days.

06:06.700 --> 06:12.580
In the years since, the market has propagated into a staggering degree of scale and legitimacy.

06:12.580 --> 06:16.620
While a thriving black and gray market still exists, especially for sales to countries

06:16.620 --> 06:20.940
with concerning human rights records, Western players like the US source the zero day exploits

06:20.940 --> 06:25.460
upon which they build their cyberweapons from companies that hardly hide what they're

06:25.460 --> 06:26.460
doing.

06:26.460 --> 06:31.400
For this extreme example, zero day broker Zerodium publishes their price list.

06:31.400 --> 06:35.400
For an exploit capable of running a piece of code on a device or network without user

06:35.400 --> 06:39.720
interaction, remote code execution as it's known, the company is willing to pay up to

06:39.720 --> 06:42.040
$10,000 on router software.

06:42.040 --> 06:47.740
For the same capability, they'll pay up to $100,000 on WordPress, and up to a million

06:47.740 --> 06:49.440
dollars for Windows.

06:49.440 --> 06:55.000
Zerodium is even offering a temporarily higher $400,000 bounty for a remote code execution

06:55.000 --> 07:00.400
zero day on Microsoft Outlook—possibly indicating that someone, somewhere desperately

07:00.400 --> 07:04.360
needs that very exploit for a cyberweapon under development.

07:04.360 --> 07:08.580
Remote code execution exploits are the holy grail of zero days.

07:08.580 --> 07:13.200
Properly used, they can allow virtually unfettered access to another's machine.

07:13.200 --> 07:18.580
Of course, zero days become worthless essentially the instant they are discovered—nowadays,

07:18.580 --> 07:21.780
software developers will quickly patch the exploits upon notification.

07:21.840 --> 07:26.480
Therefore, the fact that this malicious code, quickly dubbed Stuxnet, included a remote

07:26.480 --> 07:31.000
code execution exploit that could have sold for hundreds of thousands of dollars, indicated

07:31.000 --> 07:34.360
that it was designed to do something equally valuable.

07:34.360 --> 07:41.000
However, it soon became clear that the .lnk exploit did not stand alone.

07:41.000 --> 07:46.460
Layered on top of it was another remote code execution exploit.

07:46.460 --> 07:50.700
Stuxnet was designed to embed itself into the file that communicates metadata to printers

07:50.700 --> 07:56.000
on a local network, however, with this zero day, that file would end up on all the other

07:56.000 --> 08:01.820
computers on that local network—silently and quickly spreading from a single machine

08:01.820 --> 08:06.320
to an entire office, university, factory, or other facility.

08:06.320 --> 08:12.340
Then, to complete the spread, the code used two Escalation of Privilege zero days, each

08:12.340 --> 08:16.760
for different versions of the operating system, allowing it, when installed on a single user

08:16.760 --> 08:20.900
account, to gain access to an entire machine.

08:20.900 --> 08:25.880
Four zero days, four exploits each worth life-changing amounts of money.

08:25.880 --> 08:32.220
This was, in the most literal sense, an unprecedented scale of hacking device.

08:32.220 --> 08:37.820
Never before had a piece of code so expertly intertwined four unknown exploits.

08:37.820 --> 08:42.940
Whoever was behind this had exhausted enormous resources onto this single, one megabyte piece

08:42.940 --> 08:47.540
of code, but even as it was being combed through by Virus Blockita—even as it set

08:47.540 --> 08:52.520
the information security industry ablaze, even as it propagated from machine to machine

08:52.520 --> 08:58.980
in Iran and beyond—the single most important question remained unanswered.

08:58.980 --> 09:03.060
What was Stuxnet designed to do?

09:03.060 --> 09:08.060
This is the Natanz nuclear facility, and while neither Iranian officials nor anyone in global

09:08.060 --> 09:13.060
information security knew it, by the middle of 2010, the complex had become ground zero

09:13.060 --> 09:18.180
for the implementation of the most advanced cyberweapon the world had ever seen.

09:18.180 --> 09:21.900
Hours away from Tehran by car, sitting on the border of the nation's central desert

09:21.900 --> 09:27.040
in the shadow of the carcass mountains, this uranium enrichment facility is purposefully

09:27.040 --> 09:29.060
geographically isolated.

09:29.060 --> 09:34.260
Its geographic isolation, however, pales in comparison to its digital isolation.

09:34.260 --> 09:39.300
Natanz, in response to an earlier, more rudimentary cyberattack, wasn't even connected to the

09:39.300 --> 09:44.060
internet as Iran had air-gapped the facility to protect important and notoriously fickle

09:44.060 --> 09:46.220
centrifuges from outside meddling.

09:46.220 --> 09:50.540
For the outside to meddle, then, a worm had to be planted manually.

09:50.540 --> 09:56.920
At some point in 2009, an unknowing employee at the plant, a spy, or a mole plugged a contaminated

09:56.920 --> 10:00.820
USB stick into a PC running Microsoft Windows.

10:00.820 --> 10:04.780
Having the malware past the air-gap, however, only marked the beginning.

10:04.780 --> 10:10.820
First, using the .lnk zero-day, the worm jumped from USB to computer without detection.

10:10.820 --> 10:15.540
Then, using the printer zero-day vulnerability, the worm gained access to the facility's

10:15.540 --> 10:19.140
local network and spread across the entire enrichment plant.

10:19.140 --> 10:24.900
Undetected, and inside the Natanz network, the malicious code still held on to its payload—continuing

10:24.900 --> 10:28.700
its search for a very particular target, as it went.

10:28.700 --> 10:32.020
Conceptually, cyberweapons are rather straightforward.

10:32.020 --> 10:36.940
Like most of their physical counterparts, these weapons consist of two primary components—the

10:36.940 --> 10:38.780
carrier and the payload.

10:38.780 --> 10:43.660
In other words, no matter the level of complexity, every cyberweapon is comprised of code that

10:43.660 --> 10:48.380
gains it access into a computer or network, and code that informs what the weapon does

10:48.380 --> 10:49.760
once it's inside.

10:49.760 --> 10:53.060
At this stage, the carrier had so far succeeded.

10:53.060 --> 10:57.180
Stuxnet had access to any and all things going on here, throughout the administrative and

10:57.180 --> 11:03.280
monitoring areas of the facility—effectively, the enrichment processes surrounding infrastructure.

11:03.280 --> 11:07.580
The code's payload and, by extension, the malware's authors, however, weren't interested

11:07.580 --> 11:12.300
in crashing the plant's communications network or delivering a one-off denial of service.

11:12.300 --> 11:17.020
Instead, they worked towards something more tangible and long-lasting.

11:17.020 --> 11:23.140
What the code wanted access to was buried underground here, where actual, physical centrifuges

11:23.140 --> 11:29.340
were using centrifugal force to tear away unwanted isotopes and create Uranium-235.

11:29.340 --> 11:35.580
Running these centrifuges, though, weren't PCs, but programmable logic controllers—industrial

11:35.580 --> 11:39.260
control equipment that provided yet another hurdle for the malware.

11:39.260 --> 11:43.580
Finally, using stolen security certificates than zero-day vulnerabilities identified in

11:43.580 --> 11:49.200
Siemens Software, a German manufacturer whose PLCs controlled 164 of the Iranian centrifuges

11:49.200 --> 11:55.640
each, the carrier had reached its target, completed its mission, and released its payload.

11:55.640 --> 12:00.600
Among the many genius and frightening potentials highlighted by this nefarious code, one troubling

12:00.600 --> 12:05.180
aspect lies not in what it did, but what it intended not to do.

12:05.180 --> 12:10.020
For days after gaining access to the PLCs controlling the Iranian centrifuges, the very

12:10.020 --> 12:15.920
core of the nation's nuclear program, the payload did nothing but monitor the machine's

12:15.920 --> 12:16.920
RPMs.

12:16.920 --> 12:22.760
Then, after nearly two weeks, the code would briefly speed the centrifuges up to 1400 Hz—well

12:22.760 --> 12:26.780
beyond their normal operating range of between 800 and 1100.

12:26.780 --> 12:30.920
Weeks after that, the code would momentarily slow them down to 2 Hz, leading to increased

12:30.920 --> 12:33.680
wear and tear, and thus failure.

12:33.680 --> 12:38.000
All the while, as the machines self-destructed at a slightly above average rate, the worm

12:38.000 --> 12:42.200
reported to monitors that the centrifuges were running at average RPMs—that there

12:42.200 --> 12:44.440
was nothing here to see.

12:44.440 --> 12:49.200
Essentially, had it not managed to unintentionally escape from the facility, Stuxnet could have

12:49.200 --> 12:54.360
potentially continued to cripple Iran's nuclear ambitions from within for years, perhaps

12:54.360 --> 12:56.880
even decades, before detection.

12:56.880 --> 13:02.880
Therefore, prior to June of 2010, the piece of code was simultaneously invisible and physically

13:02.880 --> 13:08.160
destructive—a cyberweapon experts couldn't identify, but one that was destroying hundreds

13:08.160 --> 13:12.680
upon hundreds of strategically invaluable Iranian centrifuges.

13:12.680 --> 13:17.520
It's been more than a decade since Stuxnet was first identified.

13:17.520 --> 13:23.100
Still, no one has officially claimed responsibility for this first-of-a-kind weapon.

13:23.100 --> 13:27.580
The code's scale, though—its sheer size and complexity—has created a consensus that

13:27.580 --> 13:29.920
this couldn't be the work of one person.

13:29.920 --> 13:33.480
While the world's most powerful hackers are likely to get their hands on a single

13:33.480 --> 13:37.800
zero day, Stuxnet employed a staggering four.

13:37.800 --> 13:42.400
Nor could this be the work of a group of activists, or even a minor nation-state, either.

13:42.400 --> 13:47.960
At a megabyte, Stuxnet was orders of magnitude larger than any malware discovered before

13:47.960 --> 13:48.960
it.

13:48.960 --> 13:53.520
And it wasn't just massive, either—it was incredibly precise, laying dormant in

13:53.520 --> 13:58.040
computers across the globe and only weaponizing its devious payload when connecting to Siemens

13:58.040 --> 14:04.000
Step 7 software linked to a PLC running exactly 164 centrifuges.

14:04.000 --> 14:08.440
Such size signaled that this was a weapon designed across years, while such clinical

14:08.440 --> 14:13.040
precision signaled the code was crafted with potential future lawsuits in mind.

14:13.040 --> 14:18.820
In short, just in the worm's design, experts the world over concluded it had to be crafted

14:18.820 --> 14:23.660
by a major world power, or multiple, with the time and resources to approach such an

14:23.660 --> 14:28.880
unprecedented undertaking, and it had to be a world power, or multiple, that wasn't

14:28.880 --> 14:31.400
so friendly with Iran.

14:31.400 --> 14:35.680
Information in the actual code and geopolitical context aren't our only clues as to who

14:35.680 --> 14:37.540
is behind this, though.

14:37.540 --> 14:41.940
The experts have conducted countless interviews on background and pored over troves of leaked

14:41.940 --> 14:44.540
documents since the worm appeared.

14:44.540 --> 14:48.980
What they found was that the development of Stuxnet was described as a third option, that

14:48.980 --> 14:52.900
existed somewhere between doing nothing to slow Iran's nuclear advance and launching

14:52.900 --> 14:56.080
airstrikes to destroy the enrichment facilities.

14:56.080 --> 15:00.860
As an alternative was how the weapon was first presented to President Bush, then to Israeli

15:00.860 --> 15:06.980
officials, then eventually to President Obama—all of whom supported its implementation.

15:06.980 --> 15:11.300
What the journalists revealed was that the US and Israel had ushered the world into a

15:11.300 --> 15:16.780
new era of state-led cyberoffensive that wreaked physical destruction.

15:16.780 --> 15:21.020
Before this point, nation-states—the US through the NSA and Israel through its unit

15:21.020 --> 15:25.340
8200—used cyberdivisions to defend and surveil.

15:25.340 --> 15:28.420
Now they were going on the offensive.

15:28.420 --> 15:33.440
By crossing the Rubicon, though, and getting caught, the actions of the US and Israel have

15:33.440 --> 15:35.860
opened Pandora's box.

15:35.860 --> 15:42.220
Though Iran denied involvement, in 2013, major American banks were hit with a concerted attack.

15:42.220 --> 15:47.040
American intelligence identified it as retaliation by Iranian, and a worrying lesson as to how

15:47.040 --> 15:50.620
quickly the rival's cyber capabilities were expanding.

15:50.620 --> 15:56.060
Holding up American banks in 2013, however, only marked the beginning.

15:56.060 --> 16:01.740
Once the US unleashed Duxnet, other nation-states have worked to close the cyberweapon gap—many

16:01.740 --> 16:05.860
of which the US has, at best, a tenuous relationship with.

16:05.860 --> 16:10.220
North Korea, largely through its state-backed hack organization the Lazarus Group, was able

16:10.220 --> 16:15.980
to infiltrate Sony Pictures in 2014, then in 2017, the country's WannaCry ransomware

16:15.980 --> 16:20.500
forced the UK's National Health Service to work off pen and paper.

16:20.500 --> 16:25.260
Every year, China's cyberwarfare division grows stronger from the talent-scouted and

16:25.260 --> 16:30.420
zero-days identified at the Tianfu Cup, where competitive hackers tear into Google, Microsoft,

16:30.420 --> 16:31.700
and Apple software.

16:31.700 --> 16:37.400
In 2017, Russian cyberattacks brought Ukrainian banks, utilities, and government agencies

16:37.400 --> 16:38.580
to their knees.

16:38.580 --> 16:43.820
In 2021, ransomware software locked up the US's colonial pipeline.

16:43.820 --> 16:47.460
Increasing the speed at which the rest of the world catches up to the US is the fact

16:47.460 --> 16:49.780
that American weapons are spreading.

16:49.780 --> 16:54.420
The United States has long been considered a leader, if not the leader, in cyberwarfare,

16:54.420 --> 16:59.180
but a 2017 leak by a hacker group known as the Shadow Brokers unleashed the American

16:59.180 --> 17:02.740
NSA's hacking tools for the entire world to use.

17:02.740 --> 17:06.820
Today, experts have reached a concerning consensus.

17:06.820 --> 17:12.780
The capability for catastrophic cyberwarfare exists more acutely now than at any point

17:12.780 --> 17:19.420
before—changing the very landscape for current and future conflicts.

17:19.420 --> 17:23.060
Traditional weapons have consequences for the aggressors.

17:23.060 --> 17:27.140
If Russia were to deploy a nuclear weapon, mutually assured destruction would dictate

17:27.140 --> 17:30.020
a swift response by the target nation.

17:30.020 --> 17:32.140
Cyberweapons are different.

17:32.140 --> 17:36.660
It took years for major media organizations to start pointing towards the US and Israel

17:36.660 --> 17:40.800
as the forces behind Stuxnet, and much of the proof came from tacit acknowledgement

17:40.800 --> 17:44.180
by the American and Israeli government officials themselves.

17:44.180 --> 17:48.460
When the stakes get raised, so will the secrecy.

17:48.460 --> 17:52.420
Cyberwarfare has the potential for destruction without consequences.

17:52.420 --> 17:57.980
In this new battlefield, there are no rules of engagement, there are no Geneva Conventions,

17:57.980 --> 18:02.540
there are simply cutting edge aggressors and vulnerable targets who have not yet realized

18:02.540 --> 18:05.300
the doors they've left open.

18:05.300 --> 18:09.020
Experts believe that today represents a waiting period.

18:09.020 --> 18:13.300
The weapons exist, they've been developed, and they could even be out there already,

18:13.300 --> 18:17.580
embedded in the world's machines, laying dormant until the time comes for them to unleash

18:17.580 --> 18:19.340
their destructive potential.

18:19.340 --> 18:23.860
But by and large, that time has not yet come.

18:23.860 --> 18:28.020
Faced with the reality that each individual weapon can only be used once until vulnerabilities

18:28.020 --> 18:32.620
are patched, the nation-states and organizations behind these have yet to find the will to

18:32.620 --> 18:37.640
unleash a truly devastating attack on a major nation—an attack that will wake the world

18:37.640 --> 18:42.140
up to the truly existential nature of this new battlefield.

18:42.140 --> 18:44.440
But that time is coming.

18:44.440 --> 18:46.620
The big ones coming.

18:46.620 --> 18:50.880
Doctors will no longer be fought in far-off lands that can be ignored simply by turning

18:50.880 --> 18:57.180
off the TV—they will be fought in the technology that has come to envelop every moment of modern

18:57.180 --> 18:59.380
life.

18:59.380 --> 19:03.180
The US and Iran have had an incredibly tense relationship for the better part of the last

19:03.180 --> 19:07.420
century in the context of what led to Iran's nuclear program, and therefore what led to

19:07.420 --> 19:11.940
the US's development and deployment of Stuxnet stretches back into the 1950s.

19:11.940 --> 19:16.160
If you want to learn about that other side of this topic, I'd highly recommend you

19:16.200 --> 19:21.640
watch RealLifeLore's Modern Conflicts episode about US-Iranian relations on Nebula—that's

19:21.640 --> 19:26.020
exclusive to Nebula since YouTube content guidelines make it tricky to cover conflicts.

19:26.020 --> 19:29.320
This is just one of a huge number of exclusive videos on Nebula.

19:29.320 --> 19:32.880
If you're the type of person that endlessly scrolls through streaming platforms struggling

19:32.880 --> 19:36.760
to find something you want to watch, then Nebula is for you, because it's more stuff

19:36.760 --> 19:39.440
by the creators you already watch and love.

19:39.440 --> 19:43.080
After the Modern Conflicts episode, you can watch our feature-length doc on the crisis

19:43.080 --> 19:47.280
and conflict brewing in the American West with the drying up of the Colorado River,

19:47.280 --> 19:50.720
then watch Half as Interesting's travel-based game show where I'm chased across the country

19:50.720 --> 19:54.800
trying to break weird laws along the way, then watch Real Engineering's spectacularly

19:54.800 --> 19:58.720
produced series on the Battle of Britain, then watch Tom Scott's ingeniously designed

19:58.720 --> 20:03.120
game show Money featuring a much younger me, and I could keep going, but that's probably

20:03.120 --> 20:06.040
already a week's worth of content so you get the point.

20:06.040 --> 20:10.040
Amazingly, the cheapest way to get access to Nebula gets you access to a whole other

20:10.040 --> 20:12.760
streaming site, too—CuriosityStream.

20:12.760 --> 20:16.920
Here you can watch a huge catalog of non-fiction shows and documentaries, including The King

20:16.920 --> 20:21.560
of the Cruise—a captivating, quirky documentary about a Scottish baron who essentially lives

20:21.560 --> 20:26.200
on cruise ships, seeking attention while telling fantastical stories to other cruisers.

20:26.200 --> 20:30.340
CuriosityStream and Nebula have a bundle deal, so when you sign up for any subscription at

20:30.340 --> 20:34.000
CuriosityStream.com slash Wendover, you'll get access to both.

20:34.000 --> 20:39.840
And the price is unbelievably low—just $14.79 for the year for both.

20:39.920 --> 20:43.440
That's less than the monthly price of other sites that you probably use less, and you'll

20:43.440 --> 20:46.720
be supporting loads of independent creators while you're at it, so click the button

20:46.720 --> 20:50.760
on screen or head to CuriosityStream.com slash Wendover to sign up today.

